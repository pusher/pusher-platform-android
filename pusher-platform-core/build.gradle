plugins {
    id 'kotlin'
    id 'java-library'
    id 'org.junit.platform.gradle.plugin'
}

apply from: "$projectDir/../gradle/maven-push.gradle"
apply from: "$projectDir/../gradle/jacoco.gradle"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.google.code.gson:gson:2.8.2'

    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
    testImplementation "com.google.truth:truth:0.40"
    testImplementation 'org.jetbrains.spek:spek-api:1.1.5'
    testImplementation 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
    testImplementation 'org.junit.platform:junit-platform-runner:1.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testImplementation project(":test-common")

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
}

test {
    useJUnitPlatform()
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

sourceSets.test {
    java.srcDirs = ['src/test/kotlin', 'src/integrationTest/kotlin']
    resources.srcDirs = ['src/test/resources', 'src/integrationTest/resources']
}

import static org.gradle.language.base.plugins.LifecycleBasePlugin.VERIFICATION_GROUP

task unitTest(type: Test) {
    description = 'Runs unit tests.'
    group = VERIFICATION_GROUP
    useJUnitPlatform()
    testClassesDirs += sourceSets.test.output.classesDirs
    include '**/test/**'
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = VERIFICATION_GROUP
    useJUnitPlatform()
    testClassesDirs += sourceSets.test.output.classesDirs
    include '**/integrationTest/**'
}

junitPlatform {
    details 'tree'
    filters {
        engines {
            include 'junit-jupiter', 'spek'
        }
    }
}

afterEvaluate {
    // adds properties for tests
    def junitPlatformTestTask = tasks.getByName('junitPlatformTest')
    junitPlatformTestTask.systemProperties += rootProject.properties.findAll { it.value instanceof String }
    junitPlatformTestTask.systemProperties += System.env
}
